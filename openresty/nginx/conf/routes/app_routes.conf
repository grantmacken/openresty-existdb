
location = /luarocks {
  content_by_lua '
    local foo = require("foo")
    foo.say("hello, luarocks!")
    ';
}

location = /_token {
  access_by_lua_block{
    require("access").verifyToken()
  }

  content_by_lua_block {
    ngx.say("I need no extra escaping here, for example: \r\nblah")
  }
}

location = /go {
  content_by_lua '   
         local mydata = require "mydata"
         mydata.get_age("dog")
    ';
}

location = /micropub {

  access_by_lua_block{
    require("access").verifyToken()
  }

  content_by_lua_block {
    require("access").validateRequestParameters()
  }
}


location = /exist {
  access_by_lua_block{
    require("access").verifyToken()
  }
  content_by_lua_block {
    require("eXist").exist()
  }
}

location / {
  default_type text/html;
  content_by_lua '
    ngx.say("HOST: " , ngx.var.host )
    ngx.say("package.path") 
    ngx.say(package.path) -- where .lua files are searched for
    ngx.say("package.cpath") 
    ngx.say(package.cpath) -- where native modules are searched for 
    ';
}

