#           LOCATIONS
###################################
# @this: nginx-config/locations.conf
# @previous: nginx-config/rewrites.conf
# @inc-by: nginx-config/dev-server.conf
# @see http://nginx.org/en/docs/varindex.html 

location ~* ^/pages/echo.html$ {
  default_type text/plain;

  echo nginx_version $nginx_version;  
  echo time_iso8601 $time_iso8601;
  echo uri normalised $uri;
  echo request_filename $request_filename;
  echo The current request uri is $request_uri;
  echo domain  $domain;
  echo nginx_http_v2: $http2;
#  echo $ssl_preread_server_name;
  # echo $request_id;
  # echo $host;
  # echo $server_port;
  # echo $server_name;
  # echo $server_addr;
  # echo $ssl_server_name;
  echo document_uri: $document_uri; 
  echo document_root: $document_root; 
  echo realpath_root: $realpath_root;
  echo note:  request file name ;
  echo file path for the current request, based on the root or alias directives, and the request URI;
  echo note: try files will look here;
  echo request_filename $request_filename;
  echo https: $https;
  echo STUB STATUS ;
  echo connections_active: $connections_active;
  echo  Module ngx_http_browser_module; 
  echo ancient_browser: $ancient_browser;
  echo Module ngx_http_gzip_module;
  echo gzir_ratio: $gzip_ratio;
  echo Enviroment Vars ;
   # echo eXistHome: $eXistAuth;
   echo eXistHome:$eXistHome;
   echo eXistDataDir :eXistDataDir;
   echo fsAssetsPath: $fsAssetsPath;
}

# echo geoip_area_code: $geoip_area_code; 

location ~* ^/pages/(.+)$ {
 try_files $uri @proxy;
 # try_files $uri @proxy;
}

location @proxy {
  # include       proxy-cache.conf;
  rewrite ^/?(.*)$ /exist/restxq/$domain/$1 break;
  proxy_pass http://localhost:8080;
}

location ~* ^(/resources/(styles|scripts)/.+)$ {
  root $fsAssetsPath;
 #   gzip_static  on;
 #   expires epoch;
 #   add_header Pragma no-cache;
 #  echo $resources;
 #  echo $uri;
 #  try_files  $uri $uri.svg.gz $uri.svg  @proxy;
 #  log_not_found off;
}


location ~* ^(/resources/icons.+)$ {
  #  gzip_static  on;
  # expires epoch;
  # add_header Pragma no-cache;
  try_files  $uri $uri.svg.gz $uri.svg  @proxy;
  # log_not_found off;
}

# common to all locations
# expires modified +1y;
# expires max;
# sets the Expires header to 31 December 2037 23:59:59 GMT,
# and the Cache-Control max-age to 10 years.
# add_header Pragma public;
# add_header Cache-Control "public, must-revalidate, proxy-revalidate";

location ~* ^/_exist {
  access_by_lua_block{
    ngx.say('hi')
    -- require("mod.access").verifyToken()
  }

  content_by_lua_block {
   -- require("mod.eXist").processRequest()
  }
}
